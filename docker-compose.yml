services:
  prometheus:
    image: prom/prometheus:v3.5.0
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=24h'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:12.1
    container_name: grafana
    ports:
      - '5001:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus

  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566:4566"  # Edge port for all services
    environment:
      - SERVICES=sqs
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=us-east-1
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:4566/_localstack/health | grep -q '\"sqs\".*\"running\"' "]
      interval: 5s
      timeout: 5s
      retries: 30
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - ./localstack/init-aws.d:/etc/localstack/init/ready.d

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 30

  redis-insight:
    image: redis/redisinsight:latest
    container_name: redis-insight
    ports:
      - "5540:5540"
    depends_on:
      - redis
    environment:
      - RI_REDIS_HOST=redis
      - RI_REDIS_PORT=6379

  app1:
    build: .
    image: leaky-bucket-app:latest
    container_name: leaky-bucket-app-1
    depends_on:
      localstack:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - spring.cloud.aws.region.static=us-east-1
      - spring.cloud.aws.credentials.access-key=test
      - spring.cloud.aws.credentials.secret-key=test
      - spring.cloud.aws.sqs.endpoint=http://localstack:4566
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SQS_HOST=localstack
      - SQS_PORT=4566
      - app.sqs.queue-name=leaky-bucket
      - app.bucket.capacity=7200
      - app.bucket.period=PT1H
    profiles:
      - all

  app2:
    image: leaky-bucket-app:latest
    container_name: leaky-bucket-app-2
    depends_on:
      localstack:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - spring.cloud.aws.region.static=us-east-1
      - spring.cloud.aws.credentials.access-key=test
      - spring.cloud.aws.credentials.secret-key=test
      - spring.cloud.aws.sqs.endpoint=http://localstack:4566
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SQS_HOST=localstack
      - SQS_PORT=4566
      - app.sqs.queue-name=leaky-bucket
      - app.bucket.capacity=7200
      - app.bucket.period=PT1H
    profiles:
      - all

volumes:
  prometheus_data:
  grafana_data:
